public interface ParserConstants {
    int START_SYMBOL = 37;

    int FIRST_NON_TERMINAL = 37;
    int FIRST_SEMANTIC_ACTION = 70;

    int[][] PARSER_TABLE = {
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, 3, 3, -1, 3, 3, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, 7, 5, -1, 6, 8, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 11, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, 23, 21, -1, 22, 24, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, 13, 13, 13, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, 15, 16, 17, -1, -1, 19, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 27, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 30, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 33, 33, 33, 33, -1, -1, 33, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, 33, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 33, 33, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, 39, 39, -1, 39, 39, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, 41, 41, -1, 41, 41, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 44, 44, 44, 44, -1, -1, 44, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, 44, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, 44, 44, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, 47, -1, 45, 45, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
            { -1, -1, 48, 48, 48, 48, -1, -1, 50, -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, 51, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, 48, 48, -1, -1 },
            { -1, -1, 52, 52, 52, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, -1, -1, -1, 52, 52, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 53, -1, 53, 53, -1, -1, -1, 53, -1, -1, 54, 54, 54, 54, -1, -1, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 56, 57, 58, -1, -1, -1, -1 },
            { -1, -1, 59, 59, 59, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, 59, 59, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 60, -1, 60, 60, -1, -1, -1, 60, -1, -1, 60, 60, 60, 60, 61, 62, -1, -1 },
            { -1, -1, 63, 63, 63, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, -1, -1, -1, -1, -1, -1, -1, 63, 63, -1, -1 },
            { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 64, -1, 64, 64, -1, -1, -1, 64, -1, -1, 64, 64, 64, 64, 64, 64, 65, 66 },
            { -1, -1, 67, 68, 69, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, 72, 73, -1, -1 }
    };

    int[][] PRODUCTIONS = {
            { 170, 10, 13, 27, 38, 28, 171 },
            { 40, 22, 39 },
            { 0 },
            { 38 },
            { 43, 41 },
            { 47 },
            { 48 },
            { 49 },
            { 51 },
            { 24, 45, 196 },
            { 197 },
            { 23, 59, 198 },
            { 3, 195, 44 },
            { 0 },
            { 21, 43 },
            { 4 },
            { 5 },
            { 6 },
            { 16 },
            { 9 },
            { 46 },
            { 47 },
            { 48 },
            { 49 },
            { 51 },
            { 43, 23, 59, 198 },
            { 12, 25, 52, 26 },
            { 54, 43, 199, 53 },
            { 0 },
            { 22, 52 },
            { 0 },
            { 6, 200, 21 },
            { 14, 25, 55, 26 },
            { 59, 172, 56 },
            { 0 },
            { 21, 55 },
            { 11, 25, 59, 26, 188, 27, 57, 28, 50, 189 },
            { 0 },
            { 190, 8, 27, 57, 28 },
            { 42, 22, 58 },
            { 0 },
            { 57 },
            { 191, 17, 25, 59, 26, 192, 7, 27, 57, 28, 193 },
            { 191, 15, 27, 57, 28, 17, 25, 59, 26, 194 },
            { 61, 60 },
            { 0 },
            { 18, 61, 173, 60 },
            { 19, 61, 174, 60 },
            { 62 },
            { 16, 175 },
            { 9, 176 },
            { 20, 61, 177 },
            { 65, 63 },
            { 0 },
            { 64, 178, 65, 179 },
            { 29 },
            { 30 },
            { 31 },
            { 32 },
            { 67, 66 },
            { 0 },
            { 33, 67, 180, 66 },
            { 34, 67, 181, 66 },
            { 69, 68 },
            { 0 },
            { 35, 69, 182, 68 },
            { 36, 69, 183, 68 },
            { 3, 201 },
            { 4, 184 },
            { 5, 185 },
            { 6, 186 },
            { 25, 59, 26 },
            { 33, 69 },
            { 34, 69, 187 }
    };

    String[] PARSER_ERROR = {
            "",
            "esperado EOF",
            "esperado palavra_reservada",
            "esperado identificador",
            "esperado constante_int",
            "esperado constante_float",
            "esperado constante_string",
            "esperado do",
            "esperado else",
            "esperado false",
            "esperado fun",
            "esperado if",
            "esperado in",
            "esperado main",
            "esperado out",
            "esperado repeat",
            "esperado true",
            "esperado while",
            "esperado \"&\"",
            "esperado \"|\"",
            "esperado \"!\"",
            "esperado \",\"",
            "esperado \";\"",
            "esperado \"=\"",
            "esperado \":\"",
            "esperado \"(\"",
            "esperado \")\"",
            "esperado \"{\"",
            "esperado \"}\"",
            "esperado \"==\"",
            "esperado \"!=\"",
            "esperado \"<\"",
            "esperado \">\"",
            "esperado \"+\"",
            "esperado \"-\"",
            "esperado \"/\"",
            "esperado \"*\"",
            "esperado fun",
            "esperado identificador if in out repeat while",
            "esperado identificador if in out repeat while }",
            "esperado identificador if in out repeat while",
            "esperado  ;   =   : ",
            "esperado identificador if in out repeat while",
            "esperado identificador",
            "esperado  ,   ;   =   :   ) ",
            "esperado constante_int constante_float constante_string false true",
            "esperado identificador",
            "esperado in",
            "esperado out",
            "esperado if",
            "esperado else  ; ",
            "esperado repeat while",
            "esperado identificador constante_string",
            "esperado  ;   ) ",
            "esperado identificador constante_string",
            "esperado expressão",
            "esperado  ,   ) ",
            "esperado identificador if in out repeat while",
            "esperado identificador if in out repeat while  } ",
            "esperado expressão",
            "esperado  &   |   ,   ;   ) ",
            "esperado expressão",
            "esperado expressão",
            "esperado  &   |   ,   ;   )   ==  !=  <   > ",
            "esperado  ==  !=  <   > ",
            "esperado expressão",
            "esperado  &   |   ,   ;   )   ==  !=  <   >   +   - ",
            "esperado expressão",
            "esperado  &   |   ,   ;   )   ==  !=  <   >   +   -   * ",
            "esperado expressão"
    };
    
    /*
    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado palavra_reservada",
        "Era esperado identificador",
        "Era esperado constantei",
        "Era esperado constantef",
        "Era esperado constantes",
        "Era esperado do",
        "Era esperado else",
        "Era esperado false",
        "Era esperado fun",
        "Era esperado if",
        "Era esperado in",
        "Era esperado main",
        "Era esperado out",
        "Era esperado repeat",
        "Era esperado true",
        "Era esperado while",
        "Era esperado \"&\"",
        "Era esperado \"|\"",
        "Era esperado \"!\"",
        "Era esperado \",\"",
        "Era esperado \";\"",
        "Era esperado \"=\"",
        "Era esperado \":\"",
        "Era esperado \"(\"",
        "Era esperado \")\"",
        "Era esperado \"{\"",
        "Era esperado \"}\"",
        "Era esperado \"==\"",
        "Era esperado \"!=\"",
        "Era esperado \"<\"",
        "Era esperado \">\"",
        "Era esperado \"+\"",
        "Era esperado \"-\"",
        "Era esperado \"*\"",
        "Era esperado \"/\"",
        "<programa> inválido",
        "<listadeinstrucoes> inválido",
        "<listadeinstrucoes1> inválido",
        "<instrucao> inválido",
        "<instrucao1> inválido",
        "<comando> inválido",
        "<listadeidentificadores> inválido",
        "<listadeidentificadores1> inválido",
        "<valor> inválido",
        "<atribuicao> inválido",
        "<entradadedados> inválido",
        "<saidadedados> inválido",
        "<selecao> inválido",
        "<selecao1> inválido",
        "<repeticao> inválido",
        "<listadeentrada> inválido",
        "<listadeentrada1> inválido",
        "<parametroentrada> inválido",
        "<listadeexpressoes> inválido",
        "<listadeexpressoes1> inválido",
        "<listadecomandos> inválido",
        "<listadecomandos1> inválido",
        "<expressao> inválido",
        "<expressao_> inválido",
        "<elemento> inválido",
        "<relacional> inválido",
        "<relacional_> inválido",
        "<operador_relacional> inválido",
        "<aritmetica> inválido",
        "<aritmetica_> inválido",
        "<termo> inválido",
        "<termo_> inválido",
        "<fator> inválido"
    };
    */
}
