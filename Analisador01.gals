#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = String
Parser = LL
#RegularDefinitions
inteiro: [0-9] | [1-9][0-9]+
letras: i | f | s | b
#Tokens
//Luis F. de Castilho, Arthur Felipe Lueders e Nicolas Zimermann

palavra_reservada: [a-z]+

identificador: _{letras} ( ( [a-z] [a-z0-9]* ( [A-Z] [a-z0-9]+ )* [A-Z]? ) | ( [A-Z] ( [a-z0-9] [A-Z]? )* ) )

constantei: {inteiro}

constantef: {inteiro} "." [0-9] ( [0-9]* [1-9] )?

constantes: \" ( [^\n \" "\" %] | % {letras} )* \"

: # [^\n]*

: "[" [^ "[" "]" ]* "]"

:[\s\t\n]

// palavras reservadas
//do else false fun if in main out repeat true while
do   = palavra_reservada: "do"
else = palavra_reservada: "else"
false = palavra_reservada: "false"
fun = palavra_reservada: "fun"
if = palavra_reservada: "if"
in = palavra_reservada: "in"
main = palavra_reservada: "main"
out = palavra_reservada: "out"
repeat = palavra_reservada: "repeat"
true = palavra_reservada: "true"
while = palavra_reservada: "while"

//simbolos especiais
// & | ! , ; = : ( ) { } == != < > + - * /
"&"
"|"
"!"
","
";"
"="
":"
"("
")"
"{"
"}"
"=="
"!="
"<"
">"
"+"
"-"
"*"
"/"
#NonTerminals
<programa>

<listadeinstrucoes>
<listadeinstrucoes1>
<instrucao>
<instrucao1>
//<declaracaodeconstante>
//<declaracaodevariaveis>
<comando>
<listadeidentificadores>
<listadeidentificadores1>
<valor>
<atribuicao>
<entradadedados>
<saidadedados>
<selecao>
<selecao1>
<repeticao>
<listadeentrada>
<listadeentrada1>
<parametroentrada>
<listadeexpressoes>
<listadeexpressoes1>
<listadecomandos>
<listadecomandos1>

<expressao>
<expressao_>
<elemento>
<relacional>
<relacional_>
<operador_relacional>
<aritmetica>
<aritmetica_>
<termo>
<termo_>
<fator>
#Grammar
<programa> ::= #100 fun main "{" <listadeinstrucoes> "}" #101 ; // ok

<listadeinstrucoes> ::= <instrucao> ";" <listadeinstrucoes1>; // ok

<listadeinstrucoes1> ::= î | <listadeinstrucoes> ; // ok

<instrucao> ::= <listadeidentificadores> <instrucao1> | <entradadedados> | <saidadedados> | <selecao> | <repeticao> ; // ok

<instrucao1> ::= î | ":" <valor> | "=" <expressao> ; // ok

<listadeidentificadores> ::= identificador <listadeidentificadores1>; // ok

<listadeidentificadores1> ::= î | "," <listadeidentificadores> ; // ok

<valor> ::= constantei | constantef | constantes | true | false ; // ok

<comando> ::= <atribuicao> | <entradadedados> | <saidadedados> | <selecao> | <repeticao> ; // ok

<atribuicao> ::= <listadeidentificadores> "=" <expressao> ; // ok

<entradadedados> ::= in "(" <listadeentrada> ")" ; // ok

<parametroentrada> ::= constantes "," <listadeidentificadores> | <listadeidentificadores> ; // ok

<listadeentrada> ::= <parametroentrada> <listadeentrada1> ; // ok

<listadeentrada1> ::= î | ";" <listadeentrada> ; // ok

<saidadedados> ::= out "(" <listadeexpressoes> ")" ; // ok

<listadeexpressoes> ::= <expressao> #102 <listadeexpressoes1> ; // ok

<listadeexpressoes1> ::= î |  "," <listadeexpressoes> ; // ok

<selecao> ::= if "(" <expressao> ")" #118 "{" <listadecomandos> "}" <selecao1> #119 ; // ok

<selecao1> ::= î | #120 else "{" <listadecomandos> "}" ; // ok

<listadecomandos> ::= <comando> ";" <listadecomandos1>; // ok

<listadecomandos1> ::= î | <listadecomandos> ; // ok

<repeticao> ::= #121 while "(" <expressao> ")" #122 do "{" <listadecomandos> "}" #123
		| #121 repeat "{" <listadecomandos> "}" while "(" <expressao> ")" #124 ; // ok

// =========TRABALHO 3===========

<expressao> ::= <elemento> <expressao_> ;

<expressao_> ::= î | "&" <elemento> #103 <expressao_> | "|" <elemento> #104 <expressao_> ;

<elemento> ::= <relacional> | true #105 | false #106 | "!" <elemento> #107 ;

<relacional> ::= <aritmetica> <relacional_> ;

<relacional_> ::= î | <operador_relacional> #108 <aritmetica> #109 ;

<operador_relacional> ::= "==" | "!=" | "<" | ">" ;

<aritmetica> ::= <termo> <aritmetica_> ;

<aritmetica_> ::= î | "+" <termo> #110 <aritmetica_> | "-" <termo> #111 <aritmetica_> ;

<termo> ::= <fator> <termo_> ;
<termo_> ::= î | "*" <fator> #112 <termo_> | "/" <fator> #113 <termo_> ;
<fator> ::=	identificador |
		constantei #114 |
		constantef #115 |
		constantes #116 |
		"(" <expressao> ")" |
		"+" <fator> |
		"-" <fator> #117 ;



